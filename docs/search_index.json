[
["index.html", "Playing Data with R About 自述 學程式這回事", " Playing Data with R JILUNG HSIEH 2020-02-14 About 自述 2016年有幸可以到臺灣大學新聞所帶領一群未來的記者學習資料分析的技巧。說是資料分析，不如說是程式設計。當時紐約時報、國際上各大報紙大量地產製資料新聞，嘗試用資料搭配視覺化來敘事，或者透過資料探勘方法，挖掘數字、資料背後的異常現象、趨勢、分佈等等。 為了兼顧每一位學生的學習情形，特地採用小班教學，但卻有不少外系的學生也一起到課堂上來學習，因而以每個學期開課、每堂課最多三十人的模式授課。這樣頻繁授課的好處是，可以反覆地、快速地嘗試各種不同的授課方式，並且在次學期授課中進行調整。而這本書則是在授課過程零星所記錄下來的經驗和知識。 2016年開始在臺大教書的那個暑假，我其實擅長的程式語言是Python，且有二至三年開授「社會科學程式設計:ProgrammingforSocialScience」的經驗。但到任前單位主管希望我能夠以R為主要授課語言，單位主管和紐約時報的圖表編輯部門有數年的互動，她告訴我紐約時報圖表記者們都用R語言。而在2016年的當時，北臺灣業界和研究單位所開授的網路爬蟲、資料分析、機器學習等課程，都是以R為主要語言。顯然當時以Python為主要語言的「深度學習」族群尚未在臺灣發展起來(在2018年的現在，也就是我寫下這句話之時，其實臺灣熱門的是Python程式語言)。 那年暑假，我用了Datacamp來產生我對R語言的基礎認識、聽了二至三門Coursera上的R語言課程來了解R語言的授課方式、參考了三至四份以R為語言的國外課程教材、甚至自費參與由臺灣業界一群熱心的工程師所開發的網路爬蟲課程、與當時臺灣資料科學年會所開發的「手把手教你資料分析」課程觀摩他人上課的節奏和使用範例，我非常感謝有這群先行者的努力和無私的分享，讓我在後續的課程安排上駕輕就熟。 在2016年國外所開設以R來進行資料分析的課程也不算多，但在2018年的今日，Stanford的PoliticalScience與Chicago的MasterofComputationalSocialScience均開設了質量非常高的R在社會科學應用上的課程，Stanford的PoliticalScience甚至將其拆解為150A、150B、150C三門課程來授課。 基於這樣的出發點，所以這本書的核心對象就是從沒有寫過程式的大學生。 學程式這回事 何謂演算法？ 演算法（Algorithm）為處理事情、解決問題的邏輯，多取自日常生活的問題解決步驟。例如Google用以排名搜尋結果的「PageRanking」即參考自人與人之間，如何透過每次的訊息交換，建立起人的聲望。而推薦機制的核心概念「協同式推薦」，則仿自市集群眾購物行為的共同喜好、熱門物品等機制。 而程式語言（ProgrammingLanguage）則是演算法的實作。定義一套機器能夠編譯的語法，將演算法實作出來。脫離程式語法的演算法也可以被英文邏輯性地加以表徵，被稱之為「Pseudo-code」。一段典型的Pseudo-code如下，描述了ATM提款機如何提款與存款的決策步驟。 Ifoption=depositthen Output&#39;Enteramounttodeposit&#39; Inputamount balance=balance+amount Ifoption=withdrawalthen Output&#39;Enteramounttowithdraw&#39; Inputamount balance=balance-amount Output&#39;Balanceis&#39;balance 因此，程式語言的學習，則類似將日常生活的處事方法，用正確的邏輯方式來表達，並用一種指定的語言來描述。準此，程式語言的學習是「語言與邏輯」。而回想我們如何學會英文或者有天突然覺得自己將英文的運用推到另一個層次之上時，往往有一番自己的方法和領會，多半來自於個人目標與適合個人的學習方法，例如，考TOEIC、TOFEL、GRE，看美國影集、看英文原版小說，或者為了打電玩。 掌握課外學習資源 現在網路上自學資源非常多，尤其是各家線上開放課程，或者是code.org、Datacamp等線上互動學習平台，所以我在授課的過程，我多半是在課堂上強調程式語言中的關鍵技術、使用方法、使用時機和比較彼此間的差異，我甚少把一個概念和各種可用的函式在課堂上講完全，反而建議學生可以透過買書、上線上的課程來相互補充。我那時衍生了一個口頭禪是「聽一次聽不懂」 "],
["r-basic.html", "Chapter 1 R basic Preface 1.1 RStudio 基本操作 1.2 Hellow World! 載入資料 1.3 R的基本語法 1.4 Vector 1.5 Computing vectors 1.6 Data types 1.7 Character operations 1.8 Data1: Taipei city population data 1.9 Data2: Import/Export data of Taiwan 1.10 Observing data.frame 1.11 Getting one variable from a data.frame 1.12 mutate 透過運算產生新變數 1.13 filter, select 篩選資料、選取變數 1.14 sorting 排序：按照某個變數排序 1.15 Plotting 1.16 More: using dplyr", " Chapter 1 R basic Preface Description here 1.1 RStudio 基本操作 1.1.1 執行R Markdown Using Cmd+Enter (Ctrl+Enter in Window) to excute the line where your cursor is located. Using Cmd(Ctrl)+Shift+Enter to run all code in a cell Using Cmd(Ctrl)+Option(Alt)+i to insert a new cell Using mouse to select multiple lines, then Cmd(Ctrl)+Shift+c to comment/uncomment multiple lines. a &lt;- c(1, 2, 3, 4, 5) b &lt;- 4 a*b ## [1] 4 8 12 16 20 1.1.2 安裝與載入套件 套件的使用分為安裝和載入兩個動作。通常安裝好R的時候就已經安裝好基本base套件。當執行R時便會將base套件預載入程式的執行環境中。非常多的R使用者會編寫第三方套件，並且將這些套件開放給群眾使用。通常這些套件已經被上載到R cran提供下載。而R cran上的套件我們可以使用install.packages(&quot;package_name&quot;)來自動安裝到我們的電腦中。 Exercise 1.1 (Installing packages) 安裝以下套件：tidyverse, caret, jiebaR, stm, sf 1.1.3 載入第三方套件 這些第三方套件被安裝好後，還需要被加載到程式的執行環境中才可以使用。因此要用library(package_name)將其載入。 library(jsonlite) library(httr) ## Warning: package &#39;httr&#39; was built under R version 3.5.2 Exercise 1.2 (Loading packages) 用library(package_name)載入已經安裝好的jsonlite與httr 1.1.4 註解 下列程式碼中開頭有#符號者為註解，程式在執行時會自動忽略前面有#符號的程式碼。 # a &lt;- c(1, 2, 3, 4, 5) # b &lt;- 4 # a*b 1.2 Hellow World! 載入資料 1.2.1 載入Dcard資料 先不要去管以下程式碼fromJSON(content(GET(url), &quot;text&quot;))是什麼意思，先著重在語言的形式。通常一個函式會寫為func_name()，所以上述其實是三個函式由內而外一層套一層，從最內層開始往外做。這其實很make-sense，因為如果你有一個數學式(1 + (3-3)/2)/8，也是會從最裡面那層做出來。 url &lt;- &quot;https://www.dcard.tw/_api/forums/relationship/posts?popular=true&quot; res &lt;- fromJSON(content(GET(url), &quot;text&quot;)) dplyr::glimpse(res) ## Observations: 30 ## Variables: 33 ## $ id &lt;int&gt; 233008068, 233062888, 233066495, 233061385, 23306… ## $ title &lt;chr&gt; &quot;#2/13更連結 曬照 閃光團v.s單身汪攻防戰！&quot;, &quot;洗澡的小情趣&quot;, &quot;早上起床發現...… ## $ excerpt &lt;chr&gt; &quot;#2/13 更，WOW~看到兩邊人馬的熱烈曬照，販販刷留言刷得很開心吶～～～好多甜甜的閃閃的告白… ## $ anonymousSchool &lt;lgl&gt; FALSE, FALSE, TRUE, TRUE, TRUE, TRUE, FALSE, TRUE… ## $ anonymousDepartment &lt;lgl&gt; TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, T… ## $ pinned &lt;lgl&gt; TRUE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, F… ## $ forumId &lt;chr&gt; &quot;42851318-b9e2-4a75-8a05-9fe180becefe&quot;, &quot;42851318… ## $ replyId &lt;int&gt; NA, NA, NA, 233054425, NA, NA, NA, NA, 233055406,… ## $ createdAt &lt;chr&gt; &quot;2020-02-03T10:10:21.780Z&quot;, &quot;2020-02-12T11:04:15.… ## $ updatedAt &lt;chr&gt; &quot;2020-02-13T15:19:06.798Z&quot;, &quot;2020-02-13T16:00:40.… ## $ commentCount &lt;int&gt; 989, 75, 80, 1017, 210, 68, 4717, 498, 239, 31, 4… ## $ likeCount &lt;int&gt; 2456, 8950, 3945, 3895, 3491, 3462, 2884, 2198, 1… ## $ withNickname &lt;lgl&gt; TRUE, TRUE, FALSE, FALSE, FALSE, FALSE, TRUE, FAL… ## $ tags &lt;list&gt; [&lt;&gt;, &lt;&gt;, &lt;&gt;, &lt;&gt;, &quot;HIDE_THUMBNAIL&quot;, &quot;HIDE_THUMBNA… ## $ topics &lt;list&gt; [&lt;&quot;單身狗&quot;, &quot;愛你3000次&quot;, &quot;閃光團&quot;, &quot;送禮&quot;, &quot;情人節&quot;&gt;, &lt;&quot;男友&quot;, … ## $ meta &lt;df[,2]&gt; &lt;data.frame[26 x 2]&gt; ## $ forumName &lt;chr&gt; &quot;感情&quot;, &quot;感情&quot;, &quot;感情&quot;, &quot;感情&quot;, &quot;感情&quot;, &quot;感情&quot;, &quot;感情&quot;, &quot;感情&quot;, &quot;… ## $ forumAlias &lt;chr&gt; &quot;relationship&quot;, &quot;relationship&quot;, &quot;relationship&quot;, &quot;… ## $ gender &lt;chr&gt; &quot;D&quot;, &quot;F&quot;, &quot;F&quot;, &quot;M&quot;, &quot;F&quot;, &quot;M&quot;, &quot;M&quot;, &quot;F&quot;, &quot;M&quot;, &quot;F&quot;,… ## $ school &lt;chr&gt; &quot;好物縱火販&quot;, &quot;シカマロ&quot;, NA, NA, NA, NA, &quot;好小子&quot;, NA, &quot;國立清華… ## $ department &lt;chr&gt; &quot;ec_firemaker&quot;, &quot;naoko&quot;, NA, NA, NA, NA, &quot;toyot&quot;,… ## $ replyTitle &lt;chr&gt; NA, NA, NA, &quot;2020還單身的都給我出來&quot;, NA, NA, NA, NA, &quot;男友的… ## $ mediaMeta &lt;list&gt; [&lt;data.frame[7 x 8]&gt;, &lt;data.frame[3 x 10]&gt;, &lt;dat… ## $ reactions &lt;list&gt; [&lt;data.frame[6 x 2]&gt;, &lt;data.frame[4 x 2]&gt;, &lt;data… ## $ hidden &lt;lgl&gt; FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, … ## $ customStyle &lt;df[,3]&gt; &lt;data.frame[26 x 3]&gt; ## $ isSuspiciousAccount &lt;lgl&gt; FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, … ## $ layout &lt;chr&gt; &quot;classic&quot;, &quot;classic&quot;, &quot;classic&quot;, &quot;classic&quot;, &quot;clas… ## $ withImages &lt;lgl&gt; TRUE, TRUE, TRUE, FALSE, FALSE, FALSE, TRUE, FALS… ## $ withVideos &lt;lgl&gt; FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, … ## $ media &lt;list&gt; [&lt;data.frame[6 x 1]&gt;, &lt;data.frame[2 x 1]&gt;, &lt;data… ## $ reportReasonText &lt;chr&gt; &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;… ## $ postAvatar &lt;chr&gt; &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;… head(res) ## id title ## 1 233008068 #2/13更連結 曬照 閃光團v.s單身汪攻防戰！ ## 2 233062888 洗澡的小情趣 ## 3 233066495 早上起床發現... ## 4 233061385 2020單身脫魯 集氣許願樓 ## 5 233063657 讓我體驗有男友的感覺 ## 6 233066796 最嚮往的情侶生活模式 ## excerpt ## 1 #2/13 更，WOW~看到兩邊人馬的熱烈曬照，販販刷留言刷得很開心吶～～～好多甜甜的閃閃的告白好ㄘ好ㄘヾ（´︶`*）ﾉ，更多好笑、可愛的狗勾....啊腫麼好多都4柴（´･ω･`）？（（嗯，有空來做留 ## 2 男友‍️以下稱他為 那君，我和那君每天都會一起洗澡，昨天，我一如往常的低頭洗著我的頭髮（搓搓搓，那君：「我頭髮好像變長了欸！\\U0001f929」我：「嗯？是喔」（努力的搓搓搓，兩人都沒有說話的，過了一小段時間後，那 ## 3 今天早上起床之後突然回頭看到男友的手，咦！，他的手什麼時候這麼好看ㄌ！，好～再來一張，然後突然想到我的相簿裡有！剝蝦的手，好想當那隻蝦（⁎⁍̴̛\\u1d17⁍̴̛⁎）（別ㄟ！，難怪我每次都超愛牽他的手，或是把他 ## 4 我想要脫魯 我想要脫魯 我想要脫魯，很重要許願三次，集氣集起來，祝2020單身狗 天上掉下來男/女朋友，------------------------------------------------ ## 5 母胎單的朋友表示，說一句話讓她也能體驗有男友的感覺，所以姐妹們也是很努力，只是後面的對話越來越好笑，1 你要那麼想，我也沒有辦法。2 她只是朋友/妹妹而已。3 多喝熱水。4 沒事的話我打遊戲去了。5 ## 6 彼此都有一份穩定的工作，一起存錢買房，一起分享彼此工作上的大小事，當對方傾訴的垃圾桶，養隻陪伴彼此的寵物，每個禮拜兩人如果都有共同休假的日子，早上一起去吃個早午餐，下午去看場電影、遛遛狗；晚上可以自己 ## anonymousSchool anonymousDepartment pinned ## 1 FALSE TRUE TRUE ## 2 FALSE TRUE FALSE ## 3 TRUE TRUE FALSE ## 4 TRUE TRUE FALSE ## 5 TRUE TRUE FALSE ## 6 TRUE TRUE FALSE ## forumId replyId createdAt ## 1 42851318-b9e2-4a75-8a05-9fe180becefe NA 2020-02-03T10:10:21.780Z ## 2 42851318-b9e2-4a75-8a05-9fe180becefe NA 2020-02-12T11:04:15.011Z ## 3 42851318-b9e2-4a75-8a05-9fe180becefe NA 2020-02-13T02:58:32.517Z ## 4 42851318-b9e2-4a75-8a05-9fe180becefe 233054425 2020-02-12T06:15:08.879Z ## 5 42851318-b9e2-4a75-8a05-9fe180becefe NA 2020-02-12T13:27:18.597Z ## 6 42851318-b9e2-4a75-8a05-9fe180becefe NA 2020-02-13T04:21:14.383Z ## updatedAt commentCount likeCount withNickname tags ## 1 2020-02-13T15:19:06.798Z 989 2456 TRUE ## 2 2020-02-13T16:00:40.450Z 75 8950 TRUE ## 3 2020-02-13T15:44:25.655Z 80 3945 FALSE ## 4 2020-02-13T17:10:46.446Z 1017 3895 FALSE ## 5 2020-02-12T13:27:18.597Z 210 3491 FALSE HIDE_THUMBNAIL ## 6 2020-02-13T04:21:14.383Z 68 3462 FALSE HIDE_THUMBNAIL ## topics meta.layout meta.disableAdSense ## 1 單身狗, 愛你3000次, 閃光團, 送禮, 情人節 classic NA ## 2 男友, 日常, 洗澡, 情趣 classic TRUE ## 3 手控, 男友 classic NA ## 4 單身, 愛情, 集氣, 許願 classic NA ## 5 classic NA ## 6 愛情, 模式, 價值觀, 生活 classic NA ## forumName forumAlias gender school department replyTitle ## 1 感情 relationship D 好物縱火販 ec_firemaker &lt;NA&gt; ## 2 感情 relationship F シカマロ naoko &lt;NA&gt; ## 3 感情 relationship F &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; ## 4 感情 relationship M &lt;NA&gt; &lt;NA&gt; 2020還單身的都給我出來 ## 5 感情 relationship F &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; ## 6 感情 relationship M &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; ## mediaMeta ## 1 d5e12314-ae52-4da6-b71e-f8fac079cde7, d5e12314-ae52-4da6-b71e-f8fac079cde7, 5f83bcae-f005-4dbf-b862-7591cb4929d6, 7084b3a6-ce06-4d1a-980a-86ba84376e0a, b94cd302-4c1f-4fc0-93ec-b63d77105d00, 1dfd20e5-ccc0-45e8-945f-810655619b02, f1bc2af8-bc23-4527-8221-a68d9e3b4848, https://i.imgur.com/OPDes1ml.jpg, http://i.imgur.com/OPDes1m.jpg, http://i.imgur.com/XCDhJ6e.png, http://i.imgur.com/bKejPOh.jpg, http://i.imgur.com/JrRu8b4.jpg, http://i.imgur.com/i5RdGvC.png, http://i.imgur.com/P8LgiYb.png, https://i.imgur.com/OPDes1ml.jpg, https://imgur.com/OPDes1m, https://imgur.com/XCDhJ6e, https://imgur.com/bKejPOh, https://imgur.com/JrRu8b4, https://imgur.com/i5RdGvC, https://imgur.com/P8LgiYb, https://i.imgur.com/OPDes1ml.jpg, https://i.imgur.com/OPDes1ml.jpg, https://i.imgur.com/XCDhJ6el.jpg, https://i.imgur.com/bKejPOhl.jpg, https://i.imgur.com/JrRu8b4l.jpg, https://i.imgur.com/i5RdGvCl.jpg, https://i.imgur.com/P8LgiYbl.jpg, image/thumbnail, image/imgur, image/imgur, image/imgur, image/imgur, image/imgur, image/imgur, ANNOTATED, ANNOTATED, ANNOTATED, ANNOTATED, ANNOTATED, ANNOTATED, ANNOTATED, 2020-02-03T10:21:25.830Z, 2020-02-03T10:21:25.830Z, 2020-02-03T11:54:01.577Z, 2020-02-03T10:21:25.830Z, 2020-02-03T10:21:25.830Z, 2020-02-03T10:21:25.830Z, 2020-02-03T10:21:25.830Z, 2020-02-13T15:19:06.798Z, 2020-02-13T15:19:06.798Z, 2020-02-13T15:19:06.798Z, 2020-02-13T15:19:06.798Z, 2020-02-13T15:19:06.798Z, 2020-02-13T15:19:06.798Z, 2020-02-13T15:19:06.798Z ## 2 10a37035-7b28-4c58-b1c6-83319e5b8203, 613ee91a-4618-48ad-bc9d-4370175320b7, 10a37035-7b28-4c58-b1c6-83319e5b8203, https://megapx-assets.dcard.tw/images/31d33e04-4926-4dd1-a743-55c9cfe872d7/640.jpeg, https://megapx-assets.dcard.tw/images/5fa1beb8-7edd-4836-aff4-089f5880be10/1280.jpeg, https://megapx-assets.dcard.tw/images/31d33e04-4926-4dd1-a743-55c9cfe872d7/1280.jpeg, https://megapx-assets.dcard.tw/images/31d33e04-4926-4dd1-a743-55c9cfe872d7/640.jpeg, https://megapx.dcard.tw/v1/images/5fa1beb8-7edd-4836-aff4-089f5880be10, https://megapx.dcard.tw/v1/images/31d33e04-4926-4dd1-a743-55c9cfe872d7, https://megapx-assets.dcard.tw/images/31d33e04-4926-4dd1-a743-55c9cfe872d7/640.jpeg, https://megapx-assets.dcard.tw/images/5fa1beb8-7edd-4836-aff4-089f5880be10/640.jpeg, https://megapx-assets.dcard.tw/images/31d33e04-4926-4dd1-a743-55c9cfe872d7/640.jpeg, image/thumbnail, image/megapx, image/megapx, ANNOTATED, GOOGLE_VISION_ADULT_VERY_LIKELY, SAFE, ANNOTATED, POSSIBLY_UNSAFE, GOOGLE_VISION_ADULT_LIKELY, ANNOTATED, GOOGLE_VISION_ADULT_VERY_LIKELY, SAFE, 2020-02-12T11:04:15.011Z, 2020-02-13T06:58:01.888Z, 2020-02-12T11:04:15.011Z, 2020-02-13T16:00:40.450Z, 2020-02-13T16:00:40.450Z, 2020-02-13T16:00:40.450Z, 452, 1414, 1414, 640, 2000, 2000 ## 3 8b5c28d7-d435-429f-b01f-73939ee229ba, 8b5c28d7-d435-429f-b01f-73939ee229ba, d0a4becd-24b4-4fa9-b562-fd3cef9cebb6, f60cbc44-2d7d-4aa4-8d00-bc2b513c71c2, 7b009eb2-fdc8-4309-9bb3-0a59458514ed, https://megapx-assets.dcard.tw/images/089887e6-dc3c-405b-8e47-972048748d65/640.jpeg, https://megapx-assets.dcard.tw/images/089887e6-dc3c-405b-8e47-972048748d65/1280.jpeg, https://megapx-assets.dcard.tw/images/bc599ba3-e605-4074-a208-55cbeaf3ded4/1280.jpeg, https://megapx-assets.dcard.tw/images/3699aaae-c7cd-43bf-bb3c-b5c853a405df/full.jpeg, https://megapx-assets.dcard.tw/images/b6386d6f-2e5f-414c-8be8-dfcc3b27d12d/1280.jpeg, https://megapx-assets.dcard.tw/images/089887e6-dc3c-405b-8e47-972048748d65/640.jpeg, https://megapx.dcard.tw/v1/images/089887e6-dc3c-405b-8e47-972048748d65, https://megapx.dcard.tw/v1/images/bc599ba3-e605-4074-a208-55cbeaf3ded4, https://megapx.dcard.tw/v1/images/3699aaae-c7cd-43bf-bb3c-b5c853a405df, https://megapx.dcard.tw/v1/images/b6386d6f-2e5f-414c-8be8-dfcc3b27d12d, https://megapx-assets.dcard.tw/images/089887e6-dc3c-405b-8e47-972048748d65/640.jpeg, https://megapx-assets.dcard.tw/images/089887e6-dc3c-405b-8e47-972048748d65/640.jpeg, https://megapx-assets.dcard.tw/images/bc599ba3-e605-4074-a208-55cbeaf3ded4/640.jpeg, https://megapx-assets.dcard.tw/images/3699aaae-c7cd-43bf-bb3c-b5c853a405df/320.jpeg, https://megapx-assets.dcard.tw/images/b6386d6f-2e5f-414c-8be8-dfcc3b27d12d/640.jpeg, image/thumbnail, image/megapx, image/megapx, image/megapx, image/megapx, ANNOTATED, ANNOTATED, ANNOTATED, GOOGLE_VISION_ADULT_LIKELY, SAFE, ANNOTATED, ANNOTATED, 2020-02-13T02:58:32.517Z, 2020-02-13T02:58:32.517Z, 2020-02-13T02:58:32.517Z, 2020-02-13T02:58:32.517Z, 2020-02-13T15:21:43.069Z, 2020-02-13T15:44:25.655Z, 2020-02-13T15:44:25.655Z, 2020-02-13T15:44:25.655Z, 2020-02-13T15:44:25.655Z, 2020-02-13T15:44:25.655Z, 360, 750, 1125, 479, 1122, 640, 1334, 2001, 470, 2000 ## 4 NULL ## 5 NULL ## 6 NULL ## reactions ## 1 286f599c-f86a-4932-82f0-f5a06f1eca03, e8e6bc5d-41b0-4129-b134-97507523d7ff, aa0d425f-d530-4478-9a77-fe3aedc79eea, 514c2569-fd53-4d9d-a415-bf0f88e7329f, 4b018f48-e184-445f-adf1-fc8e04ba09b9, 011ead16-9b83-4729-9fde-c588920c6c2d, 2384, 51, 11, 7, 2, 1 ## 2 286f599c-f86a-4932-82f0-f5a06f1eca03, e8e6bc5d-41b0-4129-b134-97507523d7ff, 4b018f48-e184-445f-adf1-fc8e04ba09b9, aa0d425f-d530-4478-9a77-fe3aedc79eea, 8483, 449, 15, 3 ## 3 286f599c-f86a-4932-82f0-f5a06f1eca03, e8e6bc5d-41b0-4129-b134-97507523d7ff, 4b018f48-e184-445f-adf1-fc8e04ba09b9, 514c2569-fd53-4d9d-a415-bf0f88e7329f, 3891, 49, 3, 2 ## 4 286f599c-f86a-4932-82f0-f5a06f1eca03, e8e6bc5d-41b0-4129-b134-97507523d7ff, 514c2569-fd53-4d9d-a415-bf0f88e7329f, 011ead16-9b83-4729-9fde-c588920c6c2d, 3801, 54, 36, 4 ## 5 286f599c-f86a-4932-82f0-f5a06f1eca03, e8e6bc5d-41b0-4129-b134-97507523d7ff, 514c2569-fd53-4d9d-a415-bf0f88e7329f, 4b018f48-e184-445f-adf1-fc8e04ba09b9, aa0d425f-d530-4478-9a77-fe3aedc79eea, 3205, 275, 9, 1, 1 ## 6 286f599c-f86a-4932-82f0-f5a06f1eca03, 514c2569-fd53-4d9d-a415-bf0f88e7329f, 011ead16-9b83-4729-9fde-c588920c6c2d, 4b018f48-e184-445f-adf1-fc8e04ba09b9, 3445, 15, 1, 1 ## hidden customStyle.label.text customStyle.label.bgColor ## 1 FALSE &lt;NA&gt; &lt;NA&gt; ## 2 FALSE &lt;NA&gt; &lt;NA&gt; ## 3 FALSE &lt;NA&gt; &lt;NA&gt; ## 4 FALSE &lt;NA&gt; &lt;NA&gt; ## 5 FALSE &lt;NA&gt; &lt;NA&gt; ## 6 FALSE &lt;NA&gt; &lt;NA&gt; ## customStyle.headerColor customStyle.enableSupportCampaign isSuspiciousAccount ## 1 &lt;NA&gt; NA FALSE ## 2 &lt;NA&gt; NA FALSE ## 3 &lt;NA&gt; NA FALSE ## 4 &lt;NA&gt; NA FALSE ## 5 &lt;NA&gt; NA FALSE ## 6 &lt;NA&gt; NA FALSE ## layout withImages withVideos ## 1 classic TRUE FALSE ## 2 classic TRUE FALSE ## 3 classic TRUE FALSE ## 4 classic FALSE FALSE ## 5 classic FALSE FALSE ## 6 classic FALSE FALSE ## media ## 1 http://i.imgur.com/OPDes1m.jpg, http://i.imgur.com/XCDhJ6e.png, http://i.imgur.com/bKejPOh.jpg, http://i.imgur.com/JrRu8b4.jpg, http://i.imgur.com/i5RdGvC.png, http://i.imgur.com/P8LgiYb.png ## 2 https://megapx-assets.dcard.tw/images/5fa1beb8-7edd-4836-aff4-089f5880be10/1280.jpeg, https://megapx-assets.dcard.tw/images/31d33e04-4926-4dd1-a743-55c9cfe872d7/1280.jpeg ## 3 https://megapx-assets.dcard.tw/images/089887e6-dc3c-405b-8e47-972048748d65/1280.jpeg, https://megapx-assets.dcard.tw/images/bc599ba3-e605-4074-a208-55cbeaf3ded4/1280.jpeg, https://megapx-assets.dcard.tw/images/3699aaae-c7cd-43bf-bb3c-b5c853a405df/full.jpeg, https://megapx-assets.dcard.tw/images/b6386d6f-2e5f-414c-8be8-dfcc3b27d12d/1280.jpeg ## 4 NULL ## 5 NULL ## 6 NULL ## reportReasonText postAvatar ## 1 ## 2 ## 3 ## 4 ## 5 ## 6 # View(res) 1.2.2 Getting Taipei theft report data Getting from the web directly url &lt;- &quot;http://data.taipei/opendata/datalist/datasetMeta/download?id=68785231-d6c5-47a1-b001-77eec70bec02&amp;rid=34a4a431-f04d-474a-8e72-8d3f586db3df&quot; df &lt;- read.csv(url, fileEncoding = &quot;big5&quot;) head(df) ## 編號 案類 發生.現.日期 發生時段 ## 1 1 住宅竊盜 1040101 00~02 ## 2 2 住宅竊盜 1040101 00~02 ## 3 3 住宅竊盜 1040101 06~08 ## 4 4 住宅竊盜 1040101 10~12 ## 5 5 住宅竊盜 1040101 12~14 ## 6 6 住宅竊盜 1040102 00~02 ## 發生.現.地點 ## 1 台北市文山區萬美里萬寧街1~30號 ## 2 台北市信義區富台里忠孝東路5段295巷6弄1~30號 ## 3 台北市中山區新生北路1段91~120號 ## 4 台北市文山區明興里興隆路4段1~30號 ## 5 台北縣新莊市思源路332巷1~30號 ## 6 台北市士林區天福里1鄰忠誠路2段130巷1~30號 dplyr::glimpse(df) ## Observations: 3,053 ## Variables: 5 ## $ 編號 &lt;int&gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17,… ## $ 案類 &lt;fct&gt; 住宅竊盜, 住宅竊盜, 住宅竊盜, 住宅竊盜, 住宅竊盜, 住宅竊盜, 住宅竊盜, 住宅竊盜, 住宅竊盜, 住宅竊盜… ## $ 發生.現.日期 &lt;int&gt; 1040101, 1040101, 1040101, 1040101, 1040101, 1040102, 1040102… ## $ 發生時段 &lt;fct&gt; 00~02, 00~02, 06~08, 10~12, 12~14, 00~02, 06~08, 06~08, 10~1… ## $ 發生.現.地點 &lt;fct&gt; 台北市文山區萬美里萬寧街1~30號, 台北市信義區富台里忠孝東路5段295巷6弄1~30號, 台北市中山區新生北路1段91… Loading a csv file in data directory # if mac cannot read data GET(url, write_disk(&quot;data/tptheft.csv&quot;, overwrite = TRUE)) ## Response [https://data.taipei/opendata/datalist/datasetMeta/download?id=68785231-d6c5-47a1-b001-77eec70bec02&amp;rid=34a4a431-f04d-474a-8e72-8d3f586db3df] ## Date: 2020-02-13 17:26 ## Status: 200 ## Content-Type: text/html; charset=UTF-8 ## Size: 194 kB ## &lt;ON DISK&gt; /Users/jirlong/Dropbox/Programming/R/PDR/data/tptheft.csv df &lt;- read.csv(&quot;data/tptheft.csv&quot;, fileEncoding = &quot;big5&quot;) head(df) ## 編號 案類 發生.現.日期 發生時段 ## 1 1 住宅竊盜 1040101 00~02 ## 2 2 住宅竊盜 1040101 00~02 ## 3 3 住宅竊盜 1040101 06~08 ## 4 4 住宅竊盜 1040101 10~12 ## 5 5 住宅竊盜 1040101 12~14 ## 6 6 住宅竊盜 1040102 00~02 ## 發生.現.地點 ## 1 台北市文山區萬美里萬寧街1~30號 ## 2 台北市信義區富台里忠孝東路5段295巷6弄1~30號 ## 3 台北市中山區新生北路1段91~120號 ## 4 台北市文山區明興里興隆路4段1~30號 ## 5 台北縣新莊市思源路332巷1~30號 ## 6 台北市士林區天福里1鄰忠誠路2段130巷1~30號 1.2.3 Loading MOI data through API url &lt;- &quot;https://www.ris.gov.tw/rs-opendata/api/v1/datastore/ODRP024/107?page=1&quot; first_page &lt;- fromJSON(content(GET(url), &quot;text&quot;)) head(first_page$responseData) ## statistic_yyy district_code site_id village edu sex ## 1 107 65000010001 新北市板橋區 留侯里 博畢 男 ## 2 107 65000010001 新北市板橋區 留侯里 碩畢 男 ## 3 107 65000010001 新北市板橋區 留侯里 大畢 男 ## 4 107 65000010001 新北市板橋區 留侯里 專畢 男 ## 5 107 65000010001 新北市板橋區 留侯里 高中畢 男 ## 6 107 65000010001 新北市板橋區 留侯里 國中畢 男 ## headhousehold_count ## 1 3 ## 2 26 ## 3 71 ## 4 52 ## 5 122 ## 6 40 1.2.4 Getting 104 query data url &lt;- &quot;https://www.104.com.tw/jobs/search/list?ro=0&amp;kwop=7&amp;keyword=%E7%88%AC%E8%9F%B2&amp;order=1&amp;asc=0&amp;page=3&amp;mode=s&amp;jobsource=2018indexpoc&quot; res &lt;- fromJSON(content(GET(url), &quot;text&quot;)) df &lt;- res$data$list head(df) ## jobType jobNo jobName ## 1 0 11397872 【軟體/網路/APP工程師】柬埔寨金邊職缺 ## 2 0 9161490 Python程式設計師 ## 3 0 8876423 C# / .Net 軟體工程師 ## 4 2 10964862 07_資料分析師 (中和) ## 5 0 7468390 IT系統工程師 ## 6 0 9267466 資料分析工程主管 ## jobNameSnippet jobRole jobRo jobAddrNoDesc ## 1 【軟體/網路/APP工程師】柬埔寨金邊職缺 1 1 柬埔寨 ## 2 Python程式設計師 1 1 台中市南屯區 ## 3 C# / .Net 軟體工程師 1 1 台北市內湖區 ## 4 07_資料分析師 (中和) 1 1 新北市中和區 ## 5 IT系統工程師 1 1 台南市仁德區 ## 6 資料分析工程主管 1 1 台北市內湖區 ## jobAddress ## 1 ## 2 文心路一段521號7樓之1(鉅眾大樓) ## 3 堤頂大道二段179號10樓 ## 4 ## 5 新田二街1號 ## 6 內湖路一段360巷8號7樓 ## description ## 1 \\r\\nGolang開發工程師\\r\\nH5工程師\\r\\nCocos開發工程師\\r\\n廣告演算法工程師\\r\\n伺服器程式(高級/中級)\\r\\n用戶端程式(高級/中級)\\r\\n[[[爬蟲]]]開發工程師\\r\\n運維工程師(基礎)\\r\\n運維工程師(業務/中級)\\r\\n運維工程師(開發/高級)\\r\\n\\r\\n\\r\\n ## 2 職責要求： \\r\\n1. [[[爬蟲]]]及程式維護。\\r\\n2. Python程式開發及維護。\\r\\n3. 系統技術研究與專案推動上線。\\r\\n4. 需輪值班。 \\r\\n\\r\\n任職資格： \\r\\n1. 熟悉 Flask/tornado等 Python API中的一個或多個。 ## 3 本團隊以C#及Vue.js 等技術進行開發[[[爬蟲]]]程式，\\r\\n工作項目，重點如下，其他細節，歡迎各位朋友來談談：\\r\\n1. 使用HangFire為基礎來開發及維護[[[爬蟲]]]程式。\\r\\n2. 網站開發：\\r\\n(1) Server 端,使用Asp.net Core ## 4 1.消費者行為資料探勘、資料前處理及建立預測模型，提出分析報告並以簡單精要的方式呈現相關發現及後續做法，創造管理層的數據化決策價值。\\n2.跨部門團隊合作大數據資料分析專案，針對發現之問題點提出建議改善，並有效率地掌控專案走向。\\n3.熟悉Python或使用R語言做資料分析。\\n4.其他主管交辦事項。 ## 5 開發新一代ERP系統\\r\\n1.後台商業邏輯Web API設計與實作(ASP.NET Core)\\r\\n2.前台網頁製作 (Angular)\\r\\n上述兩點依照個人能力可以只負責單一項目，可同時負責前後台者尤佳\\r\\n ## 6 我們是來自網路圈與IC設計公司的新創公司\\r\\n透過 Ruby on Rails 開發新一代 E-commerce 系統與物聯智慧服務\\r\\n\\r\\n主要的工作內容為：\\r\\n1. 管理及規劃工作排程\\r\\n2. 整合目前的功能及發想新的服務\\r\\n3. 查詢/統計/分析，所獲取的資料 ## optionEdu period periodDesc applyCnt applyDesc custNo ## 1 專科 03 2年以上 00001 0~5人應徵 130000000139287 ## 2 專科 00 經歷不拘 00011 11~30人應徵 130000000079214 ## 3 專科 02 1年以上 00007 6~10人應徵 130000000085985 ## 4 大學 03 2年以上 00021 11~30人應徵 70769567000 ## 5 大學 00 經歷不拘 00003 0~5人應徵 22798584000 ## 6 大學 04 3年以上 00002 0~5人應徵 130000000046441 ## custName coIndustry coIndustryDesc salaryLow ## 1 Morning Air Technology PTE.LTD 1001001006 其它軟體及網路相關業 0000000 ## 2 雋上科技有限公司 1001001002 電腦軟體服務業 0030000 ## 3 辰城科技股份有限公司 1001001003 網際網路相關業 0000000 ## 4 台灣之星電信股份有限公司 1001002001 電信相關業 0000000 ## 5 恒耀工業股份有限公司 1002011010 其他金屬相關製造業 0000000 ## 6 順立智慧股份有限公司 1001001006 其它軟體及網路相關業 0000000 ## salaryHigh salaryDesc s10 appearDate appearDateDesc optionZone ## 1 0000000 待遇面議 10 20200113 1/13 8192 ## 2 0060000 月薪30,000~60,000元 50 20200120 1/20 0 ## 3 0000000 待遇面議 10 20200207 2/07 0 ## 4 0000000 待遇面議 10 20200205 2/05 6295680 ## 5 0000000 待遇面議 10 20200213 2/13 262144 ## 6 0000000 待遇面議 10 20200205 2/05 0 ## isApply applyDate isSave ## 1 0 0 ## 2 0 0 ## 3 0 0 ## 4 0 0 ## 5 0 0 ## 6 0 0 ## descSnippet ## 1 \\r\\nGolang開發工程師\\r\\nH5工程師\\r\\nCocos開發工程師\\r\\n廣告演算法工程師\\r\\n伺服器程式(高級/中級)\\r\\n用戶端程式(高級/中級)\\r\\n&lt;em class=&#39;b-txt--highlight&#39;&gt;爬蟲&lt;/em&gt;開發工程師\\r\\n運維工程師(基礎)\\r\\n運維工程師(業務/中級)\\r\\n運維工程師(開發/高級)\\r\\n\\r\\n\\r\\n ## 2 職責要求： \\r\\n1. &lt;em class=&#39;b-txt--highlight&#39;&gt;爬蟲&lt;/em&gt;及程式維護。\\r\\n2. Python程式開發及維護。\\r\\n3. 系統技術研究與專案推動上線。\\r\\n4. 需輪值班。 \\r\\n\\r\\n任職資格： \\r\\n1. 熟悉 Flask/tornado等 Python API中的一個或多個。 ## 3 本團隊以C#及Vue.js 等技術進行開發&lt;em class=&#39;b-txt--highlight&#39;&gt;爬蟲&lt;/em&gt;程式，\\r\\n工作項目，重點如下，其他細節，歡迎各位朋友來談談：\\r\\n1. 使用HangFire為基礎來開發及維護&lt;em class=&#39;b-txt--highlight&#39;&gt;爬蟲&lt;/em&gt;程式。\\r\\n2. 網站開發：\\r\\n(1) Server 端,使用Asp.net Core ## 4 1.消費者行為資料探勘、資料前處理及建立預測模型，提出分析報告並以簡單精要的方式呈現相關發現及後續做法，創造管理層的數據化決策價值。\\n2.跨部門團隊合作大數據資料分析專案，針對發現之問題點提出建議改善，並有效率地掌控專案走向。\\n3.熟悉Python或使用R語言做資料分析。\\n4.其他主管交辦事項。 ## 5 開發新一代ERP系統\\r\\n1.後台商業邏輯Web API設計與實作(ASP.NET Core)\\r\\n2.前台網頁製作 (Angular)\\r\\n上述兩點依照個人能力可以只負責單一項目，可同時負責前後台者尤佳\\r\\n ## 6 我們是來自網路圈與IC設計公司的新創公司\\r\\n透過 Ruby on Rails 開發新一代 E-commerce 系統與物聯智慧服務\\r\\n\\r\\n主要的工作內容為：\\r\\n1. 管理及規劃工作排程\\r\\n2. 整合目前的功能及發想新的服務\\r\\n3. 查詢/統計/分析，所獲取的資料 ## tags ## 1 員工600人 ## 2 ## 3 員工135人 ## 4 ## 5 員工1000人 ## 6 員工70人 ## link.applyAnalyze ## 1 //www.104.com.tw/jobs/apply/analysis?j=6a784a744074512b5e60422940463e67540424a733c3e466f444a42252525252314e42607503j97&amp;channel=104rpt&amp;jobsource=apply_analyze ## 2 //www.104.com.tw/jobs/apply/analysis?j=3c60436c5e6c492034583a214e2e365f2383a426b34363e673c423a1d1d1d1d186464a363189j99&amp;channel=104rpt&amp;jobsource=apply_analyze ## 3 //www.104.com.tw/jobs/apply/analysis?j=57774a2f617350285d49432459353d6643f4149723b3d456e434941242424241f24b67493816j55&amp;channel=104rpt&amp;jobsource=apply_analyze ## 4 //www.104.com.tw/jobs/apply/analysis?j=50684b313c4e465e393a426b565c3f2196a684b2f3c74472929292928415c3a2d008j48&amp;channel=104rpt&amp;jobsource=apply_analyze ## 5 //www.104.com.tw/jobs/apply/analysis?j=443a4426446c3f5631323a633c2e381975e4a44273c5c3e2121212121382b2625381j52&amp;channel=104rpt&amp;jobsource=apply_analyze ## 6 //www.104.com.tw/jobs/apply/analysis?j=5e64477162704d6c44363f2240323a6313c3e466f383a426b40463e212121211c94964523543j01&amp;channel=104rpt&amp;jobsource=apply_analyze ## link.job ## 1 //www.104.com.tw/job/6sank?jobsource=2018indexpoc ## 2 //www.104.com.tw/job/5gd1u?jobsource=2018indexpoc ## 3 //www.104.com.tw/job/5a93b?jobsource=2018indexpoc ## 4 //www.104.com.tw/job/6j0ji?jobsource=2018indexpoc ## 5 //www.104.com.tw/job/4g2na?jobsource=2018indexpoc ## 6 //www.104.com.tw/job/5imtm?jobsource=2018indexpoc ## link.cust jobsource ## 1 //www.104.com.tw/company/1a2x6bkys7?jobsource=2018indexpoc 2018indexpoc ## 2 //www.104.com.tw/company/1a2x6bjofi?jobsource=2018indexpoc 2018indexpoc ## 3 //www.104.com.tw/company/1a2x6bjtnl?jobsource=2018indexpoc 2018indexpoc ## 4 //www.104.com.tw/company/wiedfdk?jobsource=2018indexpoc 2018indexpoc ## 5 //www.104.com.tw/company/ah1os00?jobsource=2018indexpoc 2018indexpoc ## 6 //www.104.com.tw/company/1a2x6biz55?jobsource=2018indexpoc 2018indexpoc ## jobNameRaw custNameRaw ## 1 【軟體/網路/APP工程師】柬埔寨金邊職缺 Morning Air Technology PTE.LTD ## 2 Python程式設計師 雋上科技有限公司 ## 3 C# / .Net 軟體工程師 辰城科技股份有限公司 ## 4 07_資料分析師 (中和) 台灣之星電信股份有限公司 ## 5 IT系統工程師 恒耀工業股份有限公司 ## 6 資料分析工程主管 順立智慧股份有限公司 1.2.5 Getting ubike data https://taipeicity.github.io/traffic_realtime/ url &lt;- &quot;https://tcgbusfs.blob.core.windows.net/blobyoubike/YouBikeTP.json&quot; ubike.list &lt;- fromJSON(content(GET(url),&quot;text&quot;, encoding = &quot;utf-8&quot;)) ubike.v &lt;- unlist(ubike.list$retVal) ubike.m &lt;- matrix(ubike.v, byrow = T, ncol = 14) ubike.df &lt;- as.data.frame(ubike.m) names(ubike.df) &lt;- names(ubike.list$retVal$`0001`) head(ubike.df) ## sno sna tot sbi sarea mday lat ## 1 0001 捷運市政府站(3號出口) 180 19 信義區 20200214012433 25.0408578889 ## 2 0002 捷運國父紀念館站(2號出口) 48 32 大安區 20200214012420 25.041254 ## 3 0003 台北市政府 40 21 信義區 20200214012430 25.0377972222 ## 4 0004 市民廣場 60 38 信義區 20200214012438 25.0360361111 ## 5 0005 興雅國中 60 21 信義區 20200214012415 25.0365638889 ## 6 0006 臺北南山廣場 80 23 信義區 20200214012436 25.034047 ## lng ar ## 1 121.567904444 忠孝東路/松仁路(東南側) ## 2 121.55742 忠孝東路四段/光復南路口(西南側) ## 3 121.565169444 台北市政府東門(松智路) (鄰近信義商圈/台北探索館) ## 4 121.562325 市府路/松壽路(西北側)(鄰近台北101/台北世界貿易中心/台北探索館) ## 5 121.5686639 松仁路/松仁路95巷(東南側)(鄰近信義商圈/台北信義威秀影城) ## 6 121.565973 松智路/松廉路(東北側) (鄰近台北101/信義商圈/台北信義威秀影城) ## sareaen snaen ## 1 Xinyi Dist. MRT Taipei City Hall Stataion(Exit 3)-2 ## 2 Daan Dist. MRT S.Y.S Memorial Hall Stataion(Exit 2.) ## 3 Xinyi Dist. Taipei City Hall ## 4 Xinyi Dist. Citizen Square ## 5 Xinyi Dist. Xingya Jr. High School ## 6 Xinyi Dist. NAN SHAN PLAZA ## aren bemp act ## 1 The S.W. side of Road Zhongxiao East Road &amp; Road Chung Yan. 157 1 ## 2 Sec,4. Zhongxiao E.Rd/GuangFu S. Rd 16 1 ## 3 Taipei City Government Eastgate (Song Zhi Road) 19 1 ## 4 The N.W. side of Road Shifu &amp; Road Song Shou. 20 1 ## 5 The S.E. side of Road Songren &amp; Ln. 95, Songren Rd.. 39 1 ## 6 The N.E. side of Road Song Zhi &amp; Road Song Lian. 56 1 1.3 R的基本語法 1.3.1 Assignment 符號&lt;- 將右邊的算式或數值指派給左邊的變數。右邊如果是numeric，那左邊的變數就是numeric variable；右邊如果是character，左邊的變數就是character variable。R的&lt;-符號和一般程式語言的=意義是一樣的，甚至R也可以用=來作Assignment。在幾乎所有程式語言中，單等號=指的是Assignment，把右方的算式、值或物件指給左方的變數。而比較兩者相不相等，則用雙等號==，例如1==3-2。 a &lt;- 1 b &lt;- c(1, 2, 3, 4) c &lt;- c(&quot;1&quot;, &quot;2&quot;, &quot;3&quot;, &quot;4&quot;) d &lt;- c(b, a) e &lt;- &quot;abcd&quot; 1.3.2 註解 (Comment) 註解：在程式碼區塊若前面有#字號後面跟著空白的話，那代表那行被標示為註解，程式執行時會自動跳過註解不執行。 快速鍵：當游標在某一行程式碼時打cmd(ctrl)-shift-c，就可以產生註解。 # df &lt;- data.frame(a = c(1, 2, 3), b = c(3, 4, 5)) 1.4 Vector 在這邊我們使用各縣市平均每月薪資所得以及各縣市人口數兩筆範例資料來做練習。 1.4.1 建立Vector 在程式碼中，只要是文字必用成對的雙引號或單引號包含其中，以區隔「變數」和「數字」。例如如果看到沒有雙引號的「英文字母」必定是變數名稱，或函式名稱。如果看到有雙引號的數字，那也是文字。 income &lt;- c(70100, 51300, 51100, 48400, 47600, 43000) county &lt;- c(&quot;台北&quot;, &quot;新北&quot;, &quot;桃園&quot;, &quot;高雄&quot;, &quot;台中&quot;, &quot;台南&quot;) population &lt;- c(2.6, 3.9, 2.2, 2.7, 2.8, 1.8) area &lt;- c(271.8, 2052.5, 1221, 2951.9, 2214.9, 2191.7) Creating by seq() function a &lt;- seq(11, 99, 11) a ## [1] 11 22 33 44 55 66 77 88 99 b &lt;- 11:20 b ## [1] 11 12 13 14 15 16 17 18 19 20 Creating sequences by distribution x &lt;- runif(1000, 1, 10) # uniform dist, n=1000 plot(density(x)) x &lt;- rnorm(1000, 1, 10) # uniform dist, n=1000 plot(density(x)) x &lt;- rnorm(10000000, 1, 10) # normal dist, n=1000 plot(density(x)) 1.4.2 查看Vector的內容 預覽、印出Vector的內容。在R裡面不用特別用print()來印出一個變數的內容。他像是matlab一樣，只要直接打出該變數的名稱，就代表要把其內容列印出來。 county ## [1] &quot;台北&quot; &quot;新北&quot; &quot;桃園&quot; &quot;高雄&quot; &quot;台中&quot; &quot;台南&quot; income ## [1] 70100 51300 51100 48400 47600 43000 head(county) ## [1] &quot;台北&quot; &quot;新北&quot; &quot;桃園&quot; &quot;高雄&quot; &quot;台中&quot; &quot;台南&quot; tail(county) ## [1] &quot;台北&quot; &quot;新北&quot; &quot;桃園&quot; &quot;高雄&quot; &quot;台中&quot; &quot;台南&quot; length(county) ## [1] 6 # View(county) 1.4.3 Subsetting, filtering It is important to know how to neglect first n or last n elements. For example, a[1:(length(a)-2)] will neglect the last two elements. Thinking why I need parentheses for length(a)-2 here. county ## [1] &quot;台北&quot; &quot;新北&quot; &quot;桃園&quot; &quot;高雄&quot; &quot;台中&quot; &quot;台南&quot; county[c(5, 3, 1)] # how about country[c(1, 3, 5)] ## [1] &quot;台中&quot; &quot;桃園&quot; &quot;台北&quot; county[3:6] # is it equal to country[c(3, 4, 5, 6)] ## [1] &quot;桃園&quot; &quot;高雄&quot; &quot;台中&quot; &quot;台南&quot; a &lt;- 11:19 a[3:length(a)] ## [1] 13 14 15 16 17 18 19 a[length(a):3] ## [1] 19 18 17 16 15 14 13 1.4.4 Deleting Without assignment, deletion won’t change original vectors b &lt;- 11:20 b[-(3:5)] ## [1] 11 12 16 17 18 19 20 b[-c(1, 3, 5)] ## [1] 12 14 16 17 18 19 20 b ## [1] 11 12 13 14 15 16 17 18 19 20 Correct deleting operations with assignment to replace original vector b &lt;- b[-(3:5)] b ## [1] 11 12 16 17 18 19 20 a &lt;- seq(11, 99, 11) a &lt;- a[-c(1, 3, 5)] a ## [1] 22 44 66 77 88 99 1.4.5 Concatinating Concatinating is quite useful for web crawling when you crawl article links page by page. You may be not sure the number of page you need to crawl. So you need to append entire new vector to old vector. It is concatinating. (“Appending” often means adding one new element at the end of data.) a &lt;- 1:10 a &lt;- c(a, 11) a ## [1] 1 2 3 4 5 6 7 8 9 10 11 b ## [1] 11 12 16 17 18 19 20 a &lt;- c(a, b) a ## [1] 1 2 3 4 5 6 7 8 9 10 11 11 12 16 17 18 19 20 a &lt;- c(a, a, b) a ## [1] 1 2 3 4 5 6 7 8 9 10 11 11 12 16 17 18 19 20 1 2 3 4 5 6 7 ## [26] 8 9 10 11 11 12 16 17 18 19 20 11 12 16 17 18 19 20 1.5 Computing vectors 1.5.1 Arithmetic operations a &lt;- 11:19 a + 3 ## [1] 14 15 16 17 18 19 20 21 22 a / 2 ## [1] 5.5 6.0 6.5 7.0 7.5 8.0 8.5 9.0 9.5 a %% 2 ## [1] 1 0 1 0 1 0 1 0 1 a %/% 2 ## [1] 5 6 6 7 7 8 8 9 9 a %% 2== 0 ## [1] FALSE TRUE FALSE TRUE FALSE TRUE FALSE TRUE FALSE a %% 2 != 0 ## [1] TRUE FALSE TRUE FALSE TRUE FALSE TRUE FALSE TRUE a[a%% 2 == 0] ## [1] 12 14 16 18 a[a%%2 != 0] ## [1] 11 13 15 17 19 a &lt;- a %% 2 # modular arithmetic, get the reminder a &lt;- a %/% 2 # Quotient 1.5.2 Logic comparisons a %% 2 == 0 # deteting odd/even number ## [1] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE a %% 2 != 0 ## [1] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE a[a%%2==0] ## [1] 0 0 0 0 0 0 0 0 0 a &gt; b ## Warning in a &gt; b: longer object length is not a multiple of shorter object ## length ## [1] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE income &gt; mean(income) ## [1] TRUE FALSE FALSE FALSE FALSE FALSE TRUE == T # == equal to, ## [1] TRUE TRUE != F # != Not equal to ## [1] TRUE any(a&gt;11) # is there any element larger than 1 ## [1] FALSE all(a&gt;11) # are all elements larger than 1 ## [1] FALSE 1.5.3 Subsetting by logic comparisons two methods to filter data from vectors, by index vector or a logical vector with equal length. a &lt;- seq(11, 55, 11) a[c(T, F, T, F, T)] ## [1] 11 33 55 a[a%%2==1] ## [1] 11 33 55 a%%2 ## [1] 1 0 1 0 1 a%%2==1 ## [1] TRUE FALSE TRUE FALSE TRUE a &lt;- c(&quot;你好&quot;,&quot;你好棒棒&quot;,&quot;你好棒&quot;,&quot;你真的好棒&quot;) a[nchar(a)&gt;3] ## [1] &quot;你好棒棒&quot; &quot;你真的好棒&quot; # which will return &quot;index-of&quot; a &lt;- seq(11, 55, 11) a[which(a%%2==1)] ## [1] 11 33 55 which(a%%2==1) ## [1] 1 3 5 1.5.4 Sorting and ordering sort(x)的結果必須用&lt;-覆蓋原本的x，此時的x才算被排序的結果。 order(x)函式會傳回x數值由小到大的索引。這個例子的結果是5, 4, 3, 6, 1, 2，也就是5位置的那個數最小、4那個位置的數次小、接下來3, 6, 1, 2。 x[order(x)]把order(x)結果（也就是c(5, 4, 3, 6, 1, 2)）傳給原本的x便會使得原本的x重新排序。通常order()的用途是，我們可以將兩個等長的variables例如var1和var2，依據var2來重新排序var1，例如var1[order(var2)]。 x &lt;- c(33, 55, 22, 13, 4, 24) sort(x) ## [1] 4 13 22 24 33 55 x &lt;- sort(x) # assign to replace original x order(x) ## [1] 1 2 3 4 5 6 x[order(x)] ## [1] 4 13 22 24 33 55 1.5.5 Built-in math functions a &lt;- 11:19 min(a); max(a); mean(a); median(a); sd(a) ## [1] 11 ## [1] 19 ## [1] 15 ## [1] 15 ## [1] 2.738613 log2(a) ## [1] 3.459432 3.584963 3.700440 3.807355 3.906891 4.000000 4.087463 4.169925 ## [9] 4.247928 log1p(a) ## [1] 2.484907 2.564949 2.639057 2.708050 2.772589 2.833213 2.890372 2.944439 ## [9] 2.995732 ?log1p 1.6 Data types 1.6.1 Checking data type mode(county) # character ## [1] &quot;character&quot; mode(income) # numeric ## [1] &quot;numeric&quot; mode(income &gt; mean(income)) # logical ## [1] &quot;logical&quot; testing &lt;- c(&quot;26.142&quot;, &quot;12.008&quot;, &quot;7.032&quot;, &quot;13.646&quot;, &quot;4.589&quot;) mode(testing) # character ## [1] &quot;character&quot; 1.6.2 Converting data type numeric vector可以用as.character(x)轉成charcter；logical vector可以用as.numeric(x)轉為numeric。概念上可以說是character &gt; numeric &gt; logical。 如果硬是在logical vector後附加一個numeric element的話，那就會整個vector被轉為numeric vector；相仿地，如果numeric vector後附加一個character element的話那整個vector就會被轉為character vector。 可以用sum()函式來計算logical vector有幾個TRUE值。例如sum(a%%2==1)就是計算a中有幾個奇數。TRUE可視為1、FALSE可視為0，所以加總起來就是TRUE有幾個。 income.c &lt;- as.character(income) population.c &lt;- as.numeric(population) a &lt;- seq(11, 99, 11) a &lt;- c(a, &quot;100&quot;) a &lt;- seq(11, 99, 11) sum(a%%2==1) ## [1] 5 1.7 Character operations 1.7.1 Character operations a &lt;- seq(11, 55, 11) paste(&quot;A&quot;, a) # concatenate ## [1] &quot;A 11&quot; &quot;A 22&quot; &quot;A 33&quot; &quot;A 44&quot; &quot;A 55&quot; paste0(&quot;A&quot;, a) # concatenate ## [1] &quot;A11&quot; &quot;A22&quot; &quot;A33&quot; &quot;A44&quot; &quot;A55&quot; 1.8 Data1: Taipei city population data 1.8.1 Copying data and creating vectors population &lt;- c(158228, 126687, 228075, 204903, 308383, 187920) town &lt;- c(&quot;中正&quot;, &quot;大同&quot;, &quot;中山&quot;, &quot;松山&quot;, &quot;大安&quot;, &quot;萬華&quot;) area &lt;- c(7.6071, 5.6815, 13.6821, 9.2878, 11.3614, 8.8522) 1.8.2 Building a data.frame df &lt;- data.frame(town, population, area) df ## town population area ## 1 中正 158228 7.6071 ## 2 大同 126687 5.6815 ## 3 中山 228075 13.6821 ## 4 松山 204903 9.2878 ## 5 大安 308383 11.3614 ## 6 萬華 187920 8.8522 # View(df) 1.9 Data2: Import/Export data of Taiwan 台灣出口進口貿易資料查詢 1.9.1 Combining 3 vectors to a data.frame country &lt;- c(&quot;CN&quot;, &quot;US&quot;, &quot;JP&quot;, &quot;HK&quot;, &quot;KR&quot;, &quot;SG&quot;, &quot;DE&quot;, &quot;MY&quot;, &quot;VN&quot;, &quot;PH&quot;, &quot;TH&quot;, &quot;AU&quot;, &quot;NL&quot;, &quot;SA&quot;, &quot;ID&quot;, &quot;GB&quot;, &quot;IN&quot;, &quot;FR&quot;, &quot;IT&quot;, &quot;AE&quot;) import &lt;- c(26.142, 12.008, 7.032, 13.646, 4.589, 5.768, 2.131, 2.802, 3.428, 3.019, 1.976, 1.118, 1.624, 0.449, 0.983, 1.302, 1.027, 0.553, 0.670, 0.455) export &lt;- c(22.987, 12.204, 11.837, 7.739, 5.381, 4.610, 2.866, 2.784, 2.414, 2.092, 1.839, 1.788, 1.665, 1.409, 1.391, 1.075, 0.974, 0.899, 0.800, 0.728) 合併vector為data.frame 這時候我們若以str(df)觀察該df的結構會發現，文字型態的資料被轉為Factors，這是我們所不樂見的。過去統計通常會把文字型態當成類別變數，於是用Factors作為資料型態，但資料科學中經常要處理大量的文字資料，此時，我們可以把read.csv的一個參數stringsAsFactors設為FALSE，意味著預設不要將文字的資料轉為Factor而是直接以文字變項來處理。* stringsAsFactors = FALSE也是read.csv()的參數（parameter、argument）。因為一般讀檔會預設把文字讀為類別變項也就是Factor，但資料分析經常要處理文字資料而不是類別變項，所以會希望預設不要把文字讀取為類別變項，因此要設定stringsAsFactors = FALSE。 為了避免每次都要打這串參數，可以把它設定為全域參數，可以在程式一開始時便加上options(stringsAsFactors = FASLE)，意味著底下所有的函式如果有stringsAsFactors這個參數，一律自動設為FALSE。 df &lt;- data.frame(country, import, export) str(df) ## &#39;data.frame&#39;: 20 obs. of 3 variables: ## $ country: Factor w/ 20 levels &quot;AE&quot;,&quot;AU&quot;,&quot;CN&quot;,..: 3 19 11 7 12 17 4 13 20 15 ... ## $ import : num 26.14 12.01 7.03 13.65 4.59 ... ## $ export : num 22.99 12.2 11.84 7.74 5.38 ... df &lt;- data.frame(country, import, export, stringsAsFactors = FALSE) str(df) ## &#39;data.frame&#39;: 20 obs. of 3 variables: ## $ country: chr &quot;CN&quot; &quot;US&quot; &quot;JP&quot; &quot;HK&quot; ... ## $ import : num 26.14 12.01 7.03 13.65 4.59 ... ## $ export : num 22.99 12.2 11.84 7.74 5.38 ... 甚至也可以建立一個新的、空的data.frame。 df.test就R的用法就是一個變數，並不是df和test各自是一個變數。 df.test &lt;- data.frame() 1.10 Observing data.frame View(df) 用RStudio所提供的GUI直接觀看變數 head(df) 取前面六筆資料（也就是六列的資料來概觀該資料） class(df) str(df) summary(df) # View(df) head(df) # get first part of the data.frame ## country import export ## 1 CN 26.142 22.987 ## 2 US 12.008 12.204 ## 3 JP 7.032 11.837 ## 4 HK 13.646 7.739 ## 5 KR 4.589 5.381 ## 6 SG 5.768 4.610 class(df) ## [1] &quot;data.frame&quot; str(df) ## &#39;data.frame&#39;: 20 obs. of 3 variables: ## $ country: chr &quot;CN&quot; &quot;US&quot; &quot;JP&quot; &quot;HK&quot; ... ## $ import : num 26.14 12.01 7.03 13.65 4.59 ... ## $ export : num 22.99 12.2 11.84 7.74 5.38 ... summary(df) ## country import export ## Length:20 Min. : 0.449 Min. : 0.728 ## Class :character 1st Qu.: 1.016 1st Qu.: 1.312 ## Mode :character Median : 2.054 Median : 1.966 ## Mean : 4.536 Mean : 4.374 ## 3rd Qu.: 4.884 3rd Qu.: 4.803 ## Max. :26.142 Max. :22.987 # look up help help(summary) ?summary 1.10.1 Data dimension inspecting dim(df) ## [1] 20 3 ncol(df) ## [1] 3 nrow(df) ## [1] 20 length(df) ## [1] 3 1.11 Getting one variable from a data.frame names(df) 列出變數名稱 df$發生.現.地點 顯示該變數內容 df$發生時段 顯示該變數內容 length(df$發生時段) 顯示該變數的長度（相當於有幾個） names(df) ## [1] &quot;country&quot; &quot;import&quot; &quot;export&quot; head(df$發生.現.地點) ## NULL head(df$發生時段) ## NULL length(df$發生時段) ## [1] 0 summary(df) ## country import export ## Length:20 Min. : 0.449 Min. : 0.728 ## Class :character 1st Qu.: 1.016 1st Qu.: 1.312 ## Mode :character Median : 2.054 Median : 1.966 ## Mean : 4.536 Mean : 4.374 ## 3rd Qu.: 4.884 3rd Qu.: 4.803 ## Max. :26.142 Max. :22.987 1.12 mutate 透過運算產生新變數 這裡容易犯錯的是，要記得跟程式講說你要加總或四則運算的是哪個df的variable。 從下面的這個操作中，該data.frame會產生一個新的變數sub，這就相當於Excel中的某一行減去某一行，然後把資料放在新的一行。 df$sub &lt;- df$import - df$export 1.13 filter, select 篩選資料、選取變數 注意，要告訴程式import和export是哪個data.frame的。 df[,]為存取df中某個區段的數值或某個數值的方法。因此df[1, 1]會取出第一行第一列，也就是第一筆資料的第一個vector。df[2, 3]則會取出第二筆資料的第三個variable。 下面的例子nrow(df)為1894，有1894筆資料，所以自然df\\(import與df\\)export的長度都是1894。因此，比較這兩個變數的大小會得到一個長度為1894的boolean (logical) variable。因此把這個長度為1894、充滿TRUE和FALSE的logical vector丟進df的row之處，因為取自df，大小判斷式結果的長度自然和原本的df的列數相同。因此當這個TRUE/FALSE被丟在df的列之處，便會篩選出import大於p.xport的數值。 原本的df有五個variable，而上述的操作是篩選資料，所以被篩選的是列，因此行的數量、名稱都不會變。因此，我篩選完後，直接存取這個被篩選過的data.frame的country variable，自然是可以的。 df ## country import export sub ## 1 CN 26.142 22.987 3.155 ## 2 US 12.008 12.204 -0.196 ## 3 JP 7.032 11.837 -4.805 ## 4 HK 13.646 7.739 5.907 ## 5 KR 4.589 5.381 -0.792 ## 6 SG 5.768 4.610 1.158 ## 7 DE 2.131 2.866 -0.735 ## 8 MY 2.802 2.784 0.018 ## 9 VN 3.428 2.414 1.014 ## 10 PH 3.019 2.092 0.927 ## 11 TH 1.976 1.839 0.137 ## 12 AU 1.118 1.788 -0.670 ## 13 NL 1.624 1.665 -0.041 ## 14 SA 0.449 1.409 -0.960 ## 15 ID 0.983 1.391 -0.408 ## 16 GB 1.302 1.075 0.227 ## 17 IN 1.027 0.974 0.053 ## 18 FR 0.553 0.899 -0.346 ## 19 IT 0.670 0.800 -0.130 ## 20 AE 0.455 0.728 -0.273 names(df) ## [1] &quot;country&quot; &quot;import&quot; &quot;export&quot; &quot;sub&quot; nrow(df) ## [1] 20 # filter row data by column value df[df$import &gt; df$export,] ## country import export sub ## 1 CN 26.142 22.987 3.155 ## 4 HK 13.646 7.739 5.907 ## 6 SG 5.768 4.610 1.158 ## 8 MY 2.802 2.784 0.018 ## 9 VN 3.428 2.414 1.014 ## 10 PH 3.019 2.092 0.927 ## 11 TH 1.976 1.839 0.137 ## 16 GB 1.302 1.075 0.227 ## 17 IN 1.027 0.974 0.053 df[df$import &gt; df$export,]$country ## [1] &quot;CN&quot; &quot;HK&quot; &quot;SG&quot; &quot;MY&quot; &quot;VN&quot; &quot;PH&quot; &quot;TH&quot; &quot;GB&quot; &quot;IN&quot; df[df$import &gt; df$export,1] ## [1] &quot;CN&quot; &quot;HK&quot; &quot;SG&quot; &quot;MY&quot; &quot;VN&quot; &quot;PH&quot; &quot;TH&quot; &quot;GB&quot; &quot;IN&quot; # 1 row == a data.frame with only one data entry class(df[df$import &gt; df$export,1]) ## [1] &quot;character&quot; class(df[,1]) # character vector ## [1] &quot;character&quot; class(df[1,]) # data.frame ## [1] &quot;data.frame&quot; class(unlist(df[1, -1])) # filter the 1st row and select all columns except 1 ## [1] &quot;numeric&quot; 1.14 sorting 排序：按照某個變數排序 df.sorted &lt;- df[order(df$import),]會使得整個df照import的大小排序重新做排列。因為order(df$import)會把資料照指定順序排列後的位置傳回來，所以把他丟給df的列的位置，便會使得df的資料照指定的順序排列。 預設是由小到大，加上decreasing = T這個參數後變成由大而小。 # sort rows by df$import column df.sorted &lt;- df[order(df$import),] # View(df.sorted) # sort rows in decreasing order df.sorted &lt;- df[order(df$import, decreasing = T),] # add - to column in order() can sort in decreasing order df.sorted &lt;- df[order(-df$import),] head(df.sorted) ## country import export sub ## 1 CN 26.142 22.987 3.155 ## 4 HK 13.646 7.739 5.907 ## 2 US 12.008 12.204 -0.196 ## 3 JP 7.032 11.837 -4.805 ## 6 SG 5.768 4.610 1.158 ## 5 KR 4.589 5.381 -0.792 1.15 Plotting graphics::plot()為會預載入R的繪圖套件，如果希望繪圖的同時加上回歸線和資料點標籤的話，必須要三行一起執行。 # plot(df) # raise error, 1st column is a character vector plot(df[, 2:3]) plot(df[1:10, 2:3]) text(import, export, labels=country, cex= 0.5, pos=3) lines(1:25, 1:25, col=&#39;red&#39;) ?plot 1.16 More: using dplyr library(dplyr) ## Warning: package &#39;dplyr&#39; was built under R version 3.5.2 ## ## Attaching package: &#39;dplyr&#39; ## The following objects are masked from &#39;package:stats&#39;: ## ## filter, lag ## The following objects are masked from &#39;package:base&#39;: ## ## intersect, setdiff, setequal, union df &lt;- data.frame(country, import, export, stringsAsFactors = F) df &lt;- mutate(df, sub = import - export) filter(df, import &gt; export) ## country import export sub ## 1 CN 26.142 22.987 3.155 ## 2 HK 13.646 7.739 5.907 ## 3 SG 5.768 4.610 1.158 ## 4 MY 2.802 2.784 0.018 ## 5 VN 3.428 2.414 1.014 ## 6 PH 3.019 2.092 0.927 ## 7 TH 1.976 1.839 0.137 ## 8 GB 1.302 1.075 0.227 ## 9 IN 1.027 0.974 0.053 select(df, c(1, 3)) ## country export ## 1 CN 22.987 ## 2 US 12.204 ## 3 JP 11.837 ## 4 HK 7.739 ## 5 KR 5.381 ## 6 SG 4.610 ## 7 DE 2.866 ## 8 MY 2.784 ## 9 VN 2.414 ## 10 PH 2.092 ## 11 TH 1.839 ## 12 AU 1.788 ## 13 NL 1.665 ## 14 SA 1.409 ## 15 ID 1.391 ## 16 GB 1.075 ## 17 IN 0.974 ## 18 FR 0.899 ## 19 IT 0.800 ## 20 AE 0.728 "]
]
